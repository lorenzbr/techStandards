annex a: the user centred design approach a.1             design approach there are several documents which present a user centred design approach. these include iso cd 13407 [10] and etr 116 [11]. the recommended user centred design approach for the g interface of tmn systems is presented below. it is largely based on that given in ansi t1.232 [1]. a.2             user-centred design user-centred design is an approach to development that defines the interface based on a thorough understanding of the task, environment and specific users requirements. it involves designs that embody the way users think about performing their tasks. user-centred design enables the design of interfaces that: -   minimize the amount of learning required to use the interface syntax and semantics and allow users to focus on learning and performing network management tasks.  -   maximize the correspondence between user interface semantics and efficient organizational methods and procedures.  -   maximize the efficiency of the user-system dialogue.  and -   minimize human error. user-centred design requires a considerable amount of knowledge about the intended users, the tasks, and the task performance objectives and context. the best way to obtain this knowledge is through direct user contact. it is not possible to obtain this knowledge by imagining what users task structures might be and what the users might be like. direct user contact may involve detailed task analysis and iterative prototype testing, both of which are important to the task of user centred system design. a.3             steps in performing user-centred design a.3.1           task definition within a user-centred design approach, oam&p tasks are defined from the users perspective. this approach may lead to a user interface structure that differs from the underlying functional structure of a system. in the absence of any existing standard on this topic, a process and procedure for user-centred design are identified here in order to assist users of the present document. firstly, task definitions (e.g. relieve traffic congestion) are derived from user interviews, or possibly job descriptions. the task definition includes: 1) initiation conditions for the task, e.g. the system parameters that require the task to be undertaken.  and 2) termination conditions for the task, i.e. the goals of the task. 25                           eg 201 024 v1.1.1 (1997-05) a.3.2             task analysis secondly, a task analysis is performed. task analyses are best performed by observing users perform a task, but may also be obtained from detailed user interviews. in general, a complete task analysis consists of the following data: -    a description of a typical users expertise both with the oam&p system(s) and with the particular network management task.  -    a list of all sub tasks, or steps, required to carry out the task.  -    the user action(s) required to initiate each sub task.  -    decisions the user shall make during the sub task.  -    data necessary to make the decisions.  -    identification of any sequential or temporal dependencies between sub tasks.  -    feedback required to inform the user of the effect(s) of the users actions.  -    potential sources of error and consequences.  -    criteria for successful performance (including system parameters such as response time). a.3.3             task allocation thirdly, a task allocation takes place. this allows also for the possibility of changing and improving the task. in virtually every technically advanced network management system, many tasks will be automated. in deciding which tasks shall be automated and which will remain in the hands of the human user, one approach is to automate everything possible and leave what is left over for the human user. unfortunately, this approach does not account for human performance effects like loss of vigilance and lack of practice that may result from boredom or inactivity. in addition, many event detection algorithms, in order to be conservative, generate so many false alarms that alarms lose their salience and are ignored or overlooked. a better task allocation process considers the possible effects of automation on the human performance parameters important to the overall goals of the task (see iso 9241 part 2 [12]). a.3.4             prototyping this requires that a prototype(s) of the system be built to simulate system operation. at this stage, it is important that the prototype has an easily modifiable user interface. for example, an interface could be constructed using a throwaway software interface prototyping tool to provide a gui 'facade' that has no real network functionality, however to the user, it will appear real. the use of such a tool is particularly useful early on in the development cycle, where often issues are not clearly defined and changes can be expected. the prototype should simulate any known factors that affect human performance (e.g. ability to recognize major fault conditions without ambiguity, particularly when more than one occurs at a given time from different parts of the network, long response times, communication link failures, etc.). the prototype should be appropriate to the current stage of design process and may vary from a paper prototype to a full system user interface simulation. 26                               eg 201 024 v1.1.1 (1997-05) a.3.5           usability testing ideally using a prototype(s) iterative user testing can be undertaken. prospective users who have not been involved in the design process, (or user surrogates matched in knowledge and experience) are allowed to use the prototypes to perform simulated tasks. during usage, these users are discreetly observed, but are allowed to commit errors. from an analysis of the error patterns among several users, inferences can be drawn about aspects of the user interface design that are likely to generate errors or inefficiencies in the final version of the interface. the testing process may be done only once if user performance matches the desired usability criteria on the first version, but it is far more likely that there will be several aspects of the interface that require redesign, and an iterative design approach will be necessary. user-centred design, consisting of task definition, task analysis, task allocation and prototyping/testing, is the most effective procedure for user interface quality assurance. a.4             tmn g interface design designing a specific g interface has two distinct aspects: -   the application domain.  and -   the interaction elements. the application domain is that aspect of the g interface that is specific to the network management application. the interaction elements constitute that aspect of the g interface that specifies the workstation terminal features that help a user orchestrate the application functions. together, these aspects define the method of communication between the user and the system that supports user performance of oam&p tasks. the interaction-elements aspect and application domain aspect are interdependent, and should be combined within a user-centred design approach. a.5             application domain the application domain aspect of the g interface involves the expansion of the tmn information model to support the user interface. this complex process includes the following steps: a) evaluating the tmn information model and its object classes from the users perspective.  b) identifying the users mental model of the network and network functions.  c) determining the new object classes needed to bring congruence between the users mental model and the tmn information model. the tmn information model and its object classes are defined in existing operations system/network element (os/ne) interface standards (such as the oam&p messages in ansi t1.215 [2]). these standards also specify the protocols required to communicate between an ne and its os to support network operations. in order for a specific g interface to achieve the goals stated in this standard, the protocols for communicating between a user and the tmn will necessarily be different from those protocols specified in machine-to-machine standards. additionally, while the tmn information model and the users view of the network may address similar information content, the information model shall be defined from a user perspective. the second step requires a good understanding of the users expectations as well as knowledge of how the user views the network and the tasks defined in the osi management categories (i.e. the users mental model of the network). this will indicate areas where the tmn information model shall be expanded to support the user interface in a manner consistent with the objectives of the present document. 27                             eg 201 024 v1.1.1 (1997-05) the third step involves the use of object-oriented design methodologies to identify new object classes that will enable the smooth flow of information from within the users mental model to the tmn and back. this process is by nature iterative, and requires a thorough understanding of the issues addressed in steps a) and b) above. it is essential that this step be performed while keeping the user perspective in mind. for example, the object classes shall be categorized in ways that reflect the users mental model. this includes understanding the user perception of the tmn oam&p object domain and of the tasks that the user will have to perform on the objects. important factors to recognize here include the frequency with which each task is performed, the phasing of performance of tasks, the types of users who perform the tasks, and other sequential and situation dependencies among the tasks. in general, the object classes will include the following five elements: -   a description of the object class.  -   its relationship to other classes.  -   restrictions on its usage.  -   the specification of its attributes.  and -   the specification of the actions that can be applied to its instances. a process similar to that used to analyse object classes should be used to package the required functionality into appropriate tools and sets of tools. it is essential that: a) the right set of tools be defined to allow users to efficiently manage telecommunications networks.  b) functionality is partitioned correctly among the tools.  c) the functionality to perform specific steps is available to users without unnecessary steps. it is also important that specific tools may be flexibly assigned to applications as required by specific customer environments. the final result of defining the application domain is that a new information model will be created that includes object classes from three areas: -   those already defined in the tmn.  -   those defined specifically to support the user interface.  and -   those which may be needed to represent new or unique elements not already included in the tmn. the functional partitioning will also need to be optimized, within the task allocation phase. this process requires knowledge of the technical aspects of the object classes defined for the tmn as well as an understanding of the user task characteristics. 28                               eg 201 024 v1.1.1 (1997-05) a.6            interaction elements the interaction-elements aspect of the g interface encompasses those elements which are not specific to the network management application, but which help a user manage the application and its functions. this aspect consists of the specification of three basic components: the presentation elements, the dialogue methods, and the administrative facilities. the presentation elements are visual components of the user interface. clause 6 in ansi t1.210 [3] describes presentation elements that are specific to or especially important to the g interface.  it also presents criteria for using these elements. annex b of the present document describes a set of generic network element symbols recommended by ansi t1.232 [1]. dialogue methods constrain the manner by which a user communicates with the system. presentation elements are used within the framework provided, by dialogue methods. ansi t1.210 [3] clause 7 presents criteria for dialogue methods as used for network management applications. administrative facilities either administer the user interface or provide assistance in using the user interface. ansi t1.210 [3] clause 8 defines a set of such administrative facilities. 29                              eg 201 024 v1.1.1 (1997-05)
